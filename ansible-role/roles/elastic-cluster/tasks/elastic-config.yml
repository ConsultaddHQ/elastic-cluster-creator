#SPDX-License-Identifier: MIT-0
---
# tasks file for elastic-cluster

- name: Install Elasticsearch
  apt:
    name: elasticsearch={{ elk_version }}
    state: present
  register: install_output


- name: "Update elasticsearch.yaml file"
  template:
    src: elasticsearch.yml
    dest: /etc/elasticsearch/elasticsearch.yml

- name: Enable and Start Elasticsearch on Master Node
  ansible.builtin.service:
    name: elasticsearch
    enabled: yes
    state: started
  when: "'elasticsearch_master' in group_names"


- name: "Reset password of elastic user"
  expect:
    command: /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic
    responses:
      "Please confirm that you would like to continue.*": "y"
  register: elastic_user_password
  when: "'elasticsearch_master' in group_names"
  run_once: true


- name: "Print elastic user password"
  debug: var=elastic_user_password
  when: "'elasticsearch_master' in group_names"
  run_once: true


- name: Generating Enrollment Token
  shell: |
    /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s node
  register: enrollment_token
  when: "'elasticsearch_master' in group_names"
  run_once: true

- name: "Printing enrollment token"
  debug: var=enrollment_token.stdout
  when: "'elasticsearch_master' in group_names"
  run_once: true

- name: "Generating Token for Kibana"
  shell: |
    /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana
  register: kibana_token
  when: "'elasticsearch_master' in group_names"
  run_once: true

- name: "Printing token for kibana"
  debug: var=kibana_token.stdout
  when: "'elasticsearch_master' in group_names"
  run_once: true



# - name: Debug group_names
#   debug:
#     msg: "Host {{ inventory_hostname }} belongs to groups: {{ group_names }}"
#   when: "'elasticsearch_master' in group_names" 

- name: Extract elastic enrollment token from output
  set_fact:
    elastic_token: "{{ enrollment_token.stdout }}"
  delegate_to: "{{ groups['elasticsearch_data'][0] }}"
  delegate_facts: true
  run_once: true


- name: out test
  debug:
    msg: "{{ hostvars[groups['elasticsearch_data'][0]]['elastic_token'] }}"
  when: "'elasticsearch_master_eligible' in group_names or 'elasticsearch_data' in group_names"

- name: Set enrollment token for other nodes
  expect:
    command: /usr/share/elasticsearch/bin/elasticsearch-reconfigure-node --enrollment-token "{{ hostvars[groups['elasticsearch_data'][0]]['elastic_token'] }}"
    responses:
      "Do you want to continue with the reconfiguration process.*": "y"
  when: "'elasticsearch_master_eligible' in group_names or 'elasticsearch_data' in group_names"


- name: Update master-eligible node roles
  template:
    src: master-eligible-elasticsearch.yml
    dest: /etc/elasticsearch/elasticsearch.yml
  when: "'elasticsearch_master_eligible' in group_names"

- name: Enable and Start Elasticsearch on Data Node and Master-Eligible Node
  ansible.builtin.service:
    name: elasticsearch
    enabled: yes
    state: started
  when: "'elasticsearch_master_eligible' in group_names or 'elasticsearch_data' in group_names"


- name: Update master node elastic config to remove initial master node setting
  template:
    src: master-final-elasticsearch.yml
    dest: /etc/elasticsearch/elasticsearch.yml
  when: "'elasticsearch_master' in group_names"


